div.question
  .votes
    - if current_user.present?
      div.mb-3
        = link_to like_question_path(@question),
                  method: :patch,
                  class: 'btn btn-outline-success like me-2',
                  remote: true,
                  data: { type: 'json' } do
          i.bi.bi-hand-thumbs-up

        span.votes-sum.me-2.fs-5(class="#{'text-success' if question.votes_sum > 0} #{'text-danger' if question.votes_sum < 0}")
          = question.votes_sum

        = link_to dislike_question_path(@question),
                  method: :patch,
                  class: 'btn btn-outline-danger dislike',
                  remote: true,
                  data: { type: 'json' } do
          i.bi.bi-hand-thumbs-down

  .question-error

  .question-title
    h1= question.title

  .question-body
    p= question.body

  - if question.reward.present?
    b Reward:
    p
      = image_tag url_for(question.reward.image), size: '50'
      br
      = question.reward.title

  - if question.files.attached?
    p Files:
    p
      - question.files.each do |file|
        ul
          li.attachment id="file-#{file.id}"
            = link_to file.filename.to_s, url_for(file)
            br
            - if question.author == current_user
              = link_to 'Delete file', file_path(file), method: :delete, remote: true

  - if question.links.any?
    .question-links
      = render 'shared/links', resource: question, action: nil

  .question-control
    - if question.author == current_user
      = link_to 'Edit question', '#', class: 'edit-question-link', data: { question_id: question.id }
      br
      = link_to 'Delete question', question_path(question), method: :delete

      p
        = form_with model: question, class: 'hidden', html: { id: "edit-question-#{question.id}" }, local: false do |f|
          = f.label :title
          br
          = f.text_field :title
          br
          = f.label :body
          br
          = f.text_area :body
          p
            = f.label :files
            br
            = f.file_field :files, multiple: true, direct_upload: true
          p
            #links
              = f.fields_for :links do |link|
                = render 'links/link_fields', f: link
              .links
                = link_to_add_association 'Add link', f, :links, partial: 'links/link_fields'
          = f.submit 'Save'
